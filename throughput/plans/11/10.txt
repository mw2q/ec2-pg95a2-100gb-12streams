BEGIN;
BEGIN
EXPLAIN
select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate >= date '1994-07-01'
	and o_orderdate < cast(date '1994-07-01' + interval '3 month' as date)
	and l_returnflag = 'R'
	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=13743069.96..13743070.01 rows=20 width=175)
   ->  Sort  (cost=13743069.96..13756688.21 rows=5447303 width=175)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::double precision - lineitem.l_discount)))) DESC
         ->  GroupAggregate  (cost=13393845.32..13598119.18 rows=5447303 width=175)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Sort  (cost=13393845.32..13407463.58 rows=5447303 width=175)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=4361263.10..12318902.31 rows=5447303 width=175)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=4361261.53..12244000.33 rows=5447303 width=153)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge Join  (cost=3348729.90..10685775.48 rows=5447303 width=12)
                                       Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Sort  (cost=3347837.83..3361542.95 rows=5482049 width=8)
                                             Sort Key: orders.o_orderkey
                                             ->  Bitmap Heap Scan on orders  (cost=116591.57..2734224.31 rows=5482049 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-07-01'::date) AND (o_orderdate < '1994-10-01'::date))
                                                   ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..115221.06 rows=5482049 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-07-01'::date) AND (o_orderdate < '1994-10-01'::date))
                                       ->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.57..6883440.20 rows=149198095 width=12)
                                 ->  Hash  (cost=502764.28..502764.28 rows=15000028 width=145)
                                       ->  Seq Scan on customer  (cost=0.00..502764.28 rows=15000028 width=145)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(24 rows)

COMMIT;
COMMIT
